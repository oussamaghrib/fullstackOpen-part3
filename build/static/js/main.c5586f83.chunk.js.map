{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","key","id","name","number","onClick","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","notification","className","message","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","length","filter","p","toLowerCase","indexOf","event","target","preventDefault","existing","find","window","confirm","retunedPerson","addedPerson","concat","catch","error","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5586f83.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Persons = ({ persons, deletePerson }) => {\n  return persons.map((person) => (\n    <p key={person.id}>\n      {person.name} {person.number}\n      <button onClick={() => deletePerson(person.id)}>delete</button>\n    </p>\n  ));\n};\n\nexport default Persons;\n","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name:\r\n        <input value={props.newName} onChange={props.handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className={notification.type}>{notification.message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return <input value={props.value} onChange={props.onChange} />;\r\n};\r\n\r\nexport default Filter;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"http://localhost:3001/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, remove };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Persons from \"./components/Persons\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Notification from \"./components/Notification\";\r\nimport Filter from \"./components/Filter\";\r\nimport personService from \"./services/persons\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filterString, setStringFilter] = useState(\"\");\r\n  const [notification, setNotification] = useState(null);\r\n\r\n  useEffect(() => {\r\n    personService.getAll().then((data) => {\r\n      setPersons(data);\r\n    });\r\n  }, []);\r\n\r\n  const notifyWith = (message, type = \"success\") => {\r\n    setNotification({ message, type });\r\n    setTimeout(() => {\r\n      setNotification(null);\r\n    }, 5000);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleFilterStringChange = (event) => {\r\n    setStringFilter(event.target.value);\r\n  };\r\n\r\n  const deletePerson = (id) => {\r\n    const toDelete = persons.find((p) => p.id === id);\r\n    const ok = window.confirm(`Delete ${toDelete.name}`);\r\n    if (ok) {\r\n      personService\r\n        .remove(id)\r\n        .then((response) => {\r\n          setPersons(persons.filter((p) => p.id !== id));\r\n          notifyWith(`Deleted ${toDelete.name}`);\r\n        })\r\n        .catch(() => {\r\n          setPersons(persons.filter((p) => p.id !== id));\r\n          notifyWith(`${toDelete.name} had already been removed`, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n    const existing = persons.find((p) => p.name === newName);\r\n    if (existing) {\r\n      const ok = window.confirm(\r\n        `${existing.name} already in phonebook, replace the old number with new one?`\r\n      );\r\n      if (ok) {\r\n        personService\r\n          .update(existing.id, {\r\n            name: existing.name,\r\n            number: newNumber,\r\n          })\r\n          .then((retunedPerson) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== existing.id ? person : retunedPerson\r\n              )\r\n            );\r\n            notifyWith(`Changed number of  ${existing.name}`);\r\n            setNewName(\"\");\r\n            setNewNumber(\"\");\r\n          });\r\n      }\r\n    } else {\r\n      personService\r\n        .create({\r\n          name: newName,\r\n          number: newNumber,\r\n        })\r\n        .then((addedPerson) => {\r\n          setPersons(persons.concat(addedPerson));\r\n          notifyWith(`Added ${newName}`);\r\n          setNewName(\"\");\r\n          setNewNumber(\"\");\r\n        })\r\n        .catch((error) => {\r\n          notifyWith(`${error.response.data} `, \"error\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const personsToShow =\r\n    filterString.length === 0\r\n      ? persons\r\n      : persons.filter(\r\n          (p) => p.name.toLowerCase().indexOf(filterString.toLowerCase()) > 0\r\n        );\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notification={notification} />\r\n      filter shown with:\r\n      <Filter value={filterString} onChange={handleFilterStringChange} />\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        newNumber={newNumber}\r\n        newName={newName}\r\n        addPerson={addPerson}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons persons={personsToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}