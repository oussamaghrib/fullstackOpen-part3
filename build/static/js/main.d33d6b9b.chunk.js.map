{"version":3,"sources":["services/persons.js","components/Filter.js","components/Form.js","components/Phonebook.js","components/PersonNotification.js","App.js","index.js"],"names":["URL","Filter","searchValue","length","map","item","key","name","number","Form","props","onSubmit","personsAdder","value","newName","onChange","nameAdder","newNumber","numberAdder","type","Phonebook","persons","nameRemover","onClick","PersonNotification","notification","errMsg","className","App","useState","setPersons","setNewName","setNewNumber","query","setQuery","setSearchValue","setNotification","setErrMsg","useEffect","axios","get","then","res","data","placeholder","e","target","regularExp","RegExp","search","filter","match","preventDefault","person","personsObject","nameChecker","put","id","req","personsCopy","index","indexOf","window","confirm","catch","setTimeout","concat","post","addPerson","el","delete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d33d6b9b.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst URL = \"/api/persons\";\r\n\r\nconst getPersons = () => {\r\n  return axios.get(URL).then((res) => res.data);\r\n};\r\n\r\nconst addPerson = (person) => axios.post(URL, person);\r\n\r\nconst updatePerson = (person, number) => {\r\n  const req = axios.put(`${URL}/${person[0].id}`, {\r\n    name: person[0].name,\r\n    number,\r\n  });\r\n  return req.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (person) => axios.delete(`${URL}/${person.id}`);\r\n\r\nexport { getPersons, addPerson, deletePerson, updatePerson };\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ searchValue }) => {\r\n  return (\r\n    <div>\r\n      <h2>search result</h2>\r\n      {searchValue.length === 0 ? (\r\n        <p>\r\n          {\" \"}\r\n          <i> no contact under this name </i>\r\n        </p>\r\n      ) : (\r\n        searchValue.map((item) => {\r\n          return (\r\n            <p key={item.name}>\r\n              {item.name} : {item.number}\r\n            </p>\r\n          );\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form onSubmit={props.personsAdder}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.nameAdder} /> <br />\r\n        <br />\r\n        number: <input value={props.newNumber} onChange={props.numberAdder} />\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Phonebook = ({ persons, nameRemover }) => {\r\n  return (\r\n    <>\r\n      <h2>all Numbers</h2>\r\n      {persons.map((item) => (\r\n        <p key={item.name}>\r\n          {item.name} : {item.number}{\" \"}\r\n          <button\r\n            onClick={() => {\r\n              nameRemover(item);\r\n            }}\r\n          >\r\n            delete\r\n          </button>\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport \"./PersonNotification.css\";\r\n\r\nconst PersonNotification = ({ notification, errMsg }) => {\r\n  if (!errMsg) {\r\n    if (notification.length === 0) {\r\n      return <></>;\r\n    } else {\r\n      return <h1 className=\"notification\">{notification}</h1>;\r\n    }\r\n  } else {\r\n    return <h1 className=\"err\">{notification}</h1>;\r\n  }\r\n};\r\n\r\nexport default PersonNotification;","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getPersons,\r\n  addPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n} from \"./services/persons\";\r\nimport Filter from \"./components/Filter\";\r\nimport Form from \"./components/Form\";\r\nimport Phonebook from \"./components/Phonebook\";\r\nimport PersonNotification from \"./components/PersonNotification\";\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState([]);\r\n  const [notification, setNotification] = useState(\"\");\r\n  const [errMsg, setErrMsg] = useState(false);\r\n\r\n  // fetching the data from json-server (i,e: db.json)\r\n  useEffect(() => {\r\n    getPersons().then((res) => setPersons(res));\r\n  }, []);\r\n  // function that fires after the submit\r\n  const personsAdder = (e) => {\r\n    e.preventDefault();\r\n    const personsObject = { name: newName, number: newNumber };\r\n\r\n    //checking if the name exists\r\n\r\n    const nameChecker = persons.filter(\r\n      (person) => person.name === personsObject.name\r\n    );\r\n    if (nameChecker.length > 0) {\r\n      // updating the number if the user confirmed\r\n\r\n      updatePerson(nameChecker, newNumber)\r\n        .then((req) => {\r\n          const personsCopy = persons;\r\n          const index = personsCopy.indexOf(nameChecker[0]);\r\n          personsCopy[index] = {\r\n            ...req,\r\n          };\r\n\r\n          setPersons([...personsCopy]);\r\n        })\r\n        .then(() => {\r\n          window.confirm(`you want to update ${nameChecker[0].name}`);\r\n        })\r\n        .then(() => setNotification(`${nameChecker[0].name} was updated`))\r\n        .catch(() => {\r\n          setErrMsg(true);\r\n          setNotification(\r\n            `you can't update ${nameChecker[0].name} because it doesn't exist anymore`\r\n          );\r\n        });\r\n\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n      //the function the shows the notification for 5 seconds after the content was updated\r\n\r\n      setTimeout(() => {\r\n        setNotification(\"\");\r\n        setErrMsg(false);\r\n      }, 5000);\r\n    } else {\r\n      //adding a new user if the name was not already in the phonebook\r\n      setPersons(persons.concat(personsObject));\r\n      addPerson(personsObject);\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n      //the function the shows the notification for 5 seconds after the content was added\r\n      const notificationSetter = () => {\r\n        setNotification(`${personsObject.name} was added`);\r\n        setTimeout(() => {\r\n          setNotification(\"\");\r\n        }, 5000);\r\n      };\r\n      notificationSetter();\r\n    }\r\n  };\r\n\r\n  //function that fires when writing a names\r\n  const nameAdder = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  //function that fires when writing a numbers\r\n  const numberAdder = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n  // function that delete a person\r\n  const nameRemover = (item) => {\r\n    const X = window.confirm(\r\n      `do you really want to delete ${item.name} from your phonebook`\r\n    );\r\n    if (X === true) {\r\n      const personsCopy = persons.filter((el) => el !== item);\r\n      deletePerson(item);\r\n      setPersons([...personsCopy]);\r\n    }\r\n  };\r\n  //search logic\r\n  const searchFunction = (e) => {\r\n    setQuery(e.target.value);\r\n    let regularExp = new RegExp(query, \"gmi\");\r\n    const search = persons.filter((item) => item.name.match(regularExp));\r\n    e.target.value === \"\" ? setSearchValue([]) : setSearchValue(search);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <span>filter shown with </span>\r\n      <input placeholder=\"type a name here\" onChange={searchFunction}></input>\r\n      <PersonNotification\r\n        notification={notification}\r\n        errMsg={errMsg}\r\n      ></PersonNotification>\r\n      <h3>add a new</h3>\r\n      <Form\r\n        personsAdder={personsAdder}\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        nameAdder={nameAdder}\r\n        numberAdder={numberAdder}\r\n      ></Form>\r\n\r\n      {query.length === 0 ? (\r\n        <Phonebook persons={persons} nameRemover={nameRemover}></Phonebook>\r\n      ) : (\r\n        <Filter searchValue={searchValue}></Filter>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}